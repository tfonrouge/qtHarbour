/*
 * $Id: qthQTableWidget.wip 126 2011-04-12 15:44:57Z tfonrouge $
 *
 * (C) 2011. qtHarbour     http://sourceforge.net/projects/qth/
 * (C) 2011. Teo Fonrouge  <tfonrouge/at/gmail/dot/com>
 *
 */

namespace QItemSelectionModel
namespace QAbstractItemView INHERITED

#begindump
#include <QStandardItem>
#enddump

#varname tableWidget

CLASS QTableWidget FROM QTableView

/*                  */
/* Public Functions */
/*                  */

_Public_Functions_

QTableWidget ( QWidget * parent = 0 )
QTableWidget ( int rows, int columns, QWidget * parent = 0 )
~QTableWidget ()
QWidget *  cellWidget ( int row, int column ) const
void  closePersistentEditor ( QTableWidgetItem * item )
int  column ( const QTableWidgetItem * item ) const
int  columnCount () const
int  currentColumn () const
QTableWidgetItem *  currentItem () const
int  currentRow () const
void  editItem ( QTableWidgetItem * item )
QList<QTableWidgetItem *>  findItems ( const QString & text, Qt::MatchFlags flags ) const
QTableWidgetItem *  horizontalHeaderItem ( int column ) const
QTableWidgetItem *  item ( int row, int column ) const
QTableWidgetItem *  itemAt ( const QPoint & point ) const
QTableWidgetItem *  itemAt ( int ax, int ay ) const
const QTableWidgetItem *  itemPrototype () const
void  openPersistentEditor ( QTableWidgetItem * item )
void  removeCellWidget ( int row, int column )
int  row ( const QTableWidgetItem * item ) const
int  rowCount () const
QList<QTableWidgetItem *>  selectedItems ()
QList<QTableWidgetSelectionRange>  selectedRanges () const
void  setCellWidget ( int row, int column, QWidget * widget )
void  setColumnCount ( int columns )
void  setCurrentCell ( int row, int column )
void  setCurrentCell ( int row, int column, QItemSelectionModel::SelectionFlags command )
void  setCurrentItem ( QTableWidgetItem * item )
void  setCurrentItem ( QTableWidgetItem * item, QItemSelectionModel::SelectionFlags command )
void  setHorizontalHeaderItem ( int column, QTableWidgetItem * item )
void  setHorizontalHeaderLabels ( const QStringList & labels )
void  setItem ( int row, int column, QTableWidgetItem * item /Transfer/ )
void  setItemPrototype ( const QTableWidgetItem * item )
void  setRangeSelected ( const QTableWidgetSelectionRange & range, bool select )
void  setRowCount ( int rows )
void  setVerticalHeaderItem ( int row, QTableWidgetItem * item )
void  setVerticalHeaderLabels ( const QStringList & labels )
void  sortItems ( int column, Qt::SortOrder order = Qt::AscendingOrder )
QTableWidgetItem *  takeHorizontalHeaderItem ( int column )
QTableWidgetItem *  takeItem ( int row, int column ) /TransferBack/
QTableWidgetItem *  takeVerticalHeaderItem ( int row )
QTableWidgetItem *  verticalHeaderItem ( int row ) const
int  visualColumn ( int logicalColumn ) const
QRect  visualItemRect ( const QTableWidgetItem * item ) const
int  visualRow ( int logicalRow ) const

/*              */
/* Public Slots */
/*              */

_Public_Slots_

void  clear ()
void  clearContents ()
void  insertColumn ( int column )
void  insertRow ( int row )
void  removeColumn ( int column )
void  removeRow ( int row )
void  scrollToItem ( const QTableWidgetItem * item, QAbstractItemView::ScrollHint hint = EnsureVisible )

/*
 * $Id: qthQLocale.wip 134 2011-06-07 12:35:37Z tfonrouge $
 *
 * (C) 2011. qtHarbour     http://sourceforge.net/projects/qth/
 * (C) 2011. Teo Fonrouge  <tfonrouge/at/gmail/dot/com>
 *
 */

#varname locale

CLASS QLocale FROM QTHBASE

/*                  */
/* Public Functions */
/*                  */

_Public_Functions_

QLocale ()
QLocale ( const QString & name )
QLocale ( Language language, Country country = AnyCountry )
QLocale ( const QLocale & other )
QString  amText () const
Country  country () const
QString  dateFormat ( FormatType format = LongFormat ) const
QString  dateTimeFormat ( FormatType format = LongFormat ) const
QString  dayName ( int day, FormatType type = LongFormat ) const
QChar  decimalPoint () const
QChar  exponential () const
QChar  groupSeparator () const
Language  language () const
MeasurementSystem  measurementSystem () const
QString  monthName ( int month, FormatType type = LongFormat ) const
QString  name () const
QChar  negativeSign () const
NumberOptions  numberOptions () const
QChar  percent () const
QString  pmText () const
QChar  positiveSign () const
void  setNumberOptions ( NumberOptions options )
QString  standaloneDayName ( int day, FormatType type = LongFormat ) const
QString  standaloneMonthName ( int month, FormatType type = LongFormat ) const
Qt::LayoutDirection  textDirection () const
QString  timeFormat ( FormatType format = LongFormat ) const
QDate  toDate ( const QString & string, FormatType format = LongFormat ) const
QDate  toDate ( const QString & string, const QString & format ) const
QDateTime  toDateTime ( const QString & string, FormatType format = LongFormat ) const
QDateTime  toDateTime ( const QString & string, const QString & format ) const
double  toDouble ( const QString & s, bool * ok = 0 ) const
float  toFloat ( const QString & s, bool * ok = 0 ) const
int  toInt ( const QString & s, bool * ok = 0, int base = 0 ) const
qlonglong  toLongLong ( const QString & s, bool * ok = 0, int base = 0 ) const
short  toShort ( const QString & s, bool * ok = 0, int base = 0 ) const
QString  toString ( qlonglong i ) const
QString  toString ( const QDate & date, const QString & format ) const
QString  toString ( const QDate & date, FormatType format = LongFormat ) const
QString  toString ( const QTime & time, const QString & format ) const
QString  toString ( const QTime & time, FormatType format = LongFormat ) const
QString  toString ( const QDateTime & dateTime, FormatType format = LongFormat ) const
QString  toString ( const QDateTime & dateTime, const QString & format ) const
QString  toString ( qulonglong i ) const
QString  toString ( double i, char f = 'g', int prec = 6 ) const
QString  toString ( short i ) const
QString  toString ( ushort i ) const
QString  toString ( int i ) const
QString  toString ( uint i ) const
QString  toString ( float i, char f = 'g', int prec = 6 ) const
QTime  toTime ( const QString & string, FormatType format = LongFormat ) const
QTime  toTime ( const QString & string, const QString & format ) const
uint  toUInt ( const QString & s, bool * ok = 0, int base = 0 ) const
qlonglong  toULongLong ( const QString & s, bool * ok = 0, int base = 0 ) const
ushort  toUShort ( const QString & s, bool * ok = 0, int base = 0 ) const
QChar  zeroDigit () const
bool  operator!= ( const QLocale & other ) const
QLocale &  operator= ( const QLocale & other )
bool  operator== ( const QLocale & other ) const

/*                       */
/* Static Public Members */
/*                       */

_Static_Public_Members_

QLocale  c ()
QList<Country>  countriesForLanguage ( Language language )
QString  countryToString ( Country country )
QString  languageToString ( Language language )
void  setDefault ( const QLocale & locale )
QLocale  system ()

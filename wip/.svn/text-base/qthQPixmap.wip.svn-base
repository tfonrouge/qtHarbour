/*
 * $Id: qthQPixmap.wip 126 2011-04-12 15:44:57Z tfonrouge $
 *
 * (C) 2011. qtHarbour     http://sourceforge.net/projects/qth/
 * (C) 2011. Teo Fonrouge  <tfonrouge/at/gmail/dot/com>
 *
 */


#begindump
#include <QBitmap>
#enddump

#varname pixmap

CLASS QPixmap FROM QPaintDevice

/*                  */
/* Public Functions */
/*                  */

_Public_Functions_

QPixmap ()
QPixmap ( int width, int height )
QPixmap ( const QString & fileName, const char * format = 0, Qt::ImageConversionFlags flags = Qt::AutoColor )
#ifdef Enabled
QPixmap ( const char * const[] xpm )
QPixmap ( const QPixmap & pixmap )
QPixmap ( const QSize & size )
~QPixmap ()
qint64  cacheKey () const

#if QT_VERSION >= 0x040700
bool  convertFromImage ( const QImage & image, Qt::ImageConversionFlags flags = Qt::AutoColor )

QPixmap  copy ( const QRect & rectangle = QRect() ) const
QPixmap  copy ( int x, int y, int width, int height ) const
QBitmap  createHeuristicMask ( bool clipTight = true ) const
QBitmap  createMaskFromColor ( const QColor & maskColor, Qt::MaskMode mode ) const
QBitmap  createMaskFromColor ( const QColor & maskColor ) const
int  depth () const
void  detach ()
void  fill ( const QColor & color = Qt::white )
void  fill ( const QWidget * widget, const QPoint & offset )
void  fill ( const QWidget * widget, int x, int y )

#if X11
Qt::HANDLE  handle () const

bool  hasAlpha () const
bool  hasAlphaChannel () const
int  height () const
bool  isNull () const
bool  isQBitmap () const
bool  load ( const QString & fileName, const char * format = 0, Qt::ImageConversionFlags flags = Qt::AutoColor )
bool  loadFromData ( const uchar * data, uint len, const char * format = 0, Qt::ImageConversionFlags flags = Qt::AutoColor )
bool  loadFromData ( const QByteArray & data, const char * format = 0, Qt::ImageConversionFlags flags = Qt::AutoColor )
QBitmap  mask () const
QRect  rect () const
bool  save ( const QString & fileName, const char * format = 0, int quality = -1 ) const
bool  save ( QIODevice * device, const char * format = 0, int quality = -1 ) const
QPixmap  scaled ( const QSize & size, Qt::AspectRatioMode aspectRatioMode = Qt::IgnoreAspectRatio, Qt::TransformationMode transformMode = Qt::FastTransformation ) const
QPixmap  scaled ( int width, int height, Qt::AspectRatioMode aspectRatioMode = Qt::IgnoreAspectRatio, Qt::TransformationMode transformMode = Qt::FastTransformation ) const
QPixmap  scaledToHeight ( int height, Qt::TransformationMode mode = Qt::FastTransformation ) const
QPixmap  scaledToWidth ( int width, Qt::TransformationMode mode = Qt::FastTransformation ) const
void  scroll ( int dx, int dy, int x, int y, int width, int height, QRegion * exposed = 0 )
void  scroll ( int dx, int dy, const QRect & rect, QRegion * exposed = 0 )
void  setMask ( const QBitmap & mask )
QSize  size () const
QImage  toImage () const

#if Mac
CGImageRef  toMacCGImageRef () const

#if Symbian
CFbsBitmap *  toSymbianCFbsBitmap () const

#if Symbian
RSgImage *  toSymbianRSgImage () const

#if __WIN32__no
HBITMAP  toWinHBITMAP ( HBitmapFormat format = NoAlpha ) const

#if __WIN32__
HICON  toWinHICON () const

QPixmap  transformed ( const QTransform & transform, Qt::TransformationMode mode = Qt::FastTransformation ) const
QPixmap  transformed ( const QMatrix & matrix, Qt::TransformationMode mode = Qt::FastTransformation ) const
int  width () const

#if X11
const QX11Info &  x11Info () const

#if X11
Qt::HANDLE  x11PictureHandle () const

//operator QVariant () const
bool  operator! () const
QPixmap &  operator= ( const QPixmap & pixmap )

/*                       */
/* Static Public Members */
/*                       */

_Static_Public_Members_

int  defaultDepth ()
QPixmap  fromImage ( const QImage & image, Qt::ImageConversionFlags flags = Qt::AutoColor )

#if QT_VERSION >= 0x040700
QPixmap  fromImageReader ( QImageReader * imageReader, Qt::ImageConversionFlags flags = Qt::AutoColor )

#if Mac
QPixmap  fromMacCGImageRef ( CGImageRef image )

#if Symbian
QPixmap  fromSymbianCFbsBitmap ( CFbsBitmap * bitmap )

#if Symbian
QPixmap  fromSymbianRSgImage ( RSgImage * sgImage )

#if __WIN32__no
QPixmap  fromWinHBITMAP ( HBITMAP bitmap, HBitmapFormat format = NoAlpha )

#if __WIN32__no
QPixmap  fromWinHICON ( HICON icon )

#if X11
QPixmap  fromX11Pixmap ( Qt::HANDLE pixmap, ShareMode mode = ImplicitlyShared )

QPixmap  grabWidget ( QWidget * widget, const QRect & rectangle )
QPixmap  grabWidget ( QWidget * widget, int x = 0, int y = 0, int width = -1, int height = -1 )
QPixmap  grabWindow ( WId window, int x = 0, int y = 0, int width = -1, int height = -1 )
QTransform  trueMatrix ( const QTransform & matrix, int width, int height )
QMatrix  trueMatrix ( const QMatrix & m, int w, int h )

/*
 * $Id: qthQFrame.wip 126 2011-04-12 15:44:57Z tfonrouge $
 *
 * File autogenerated by Wip utility v0.1-151
 * Do not edit this file.
 *
 * (C) 2012. qtHarbour     http://sourceforge.net/projects/qth/
 * (C) 2012. Teo Fonrouge  <tfonrouge/at/gmail/dot/com>
 *
 */

#include "qtharbour.h"

#include <QFrame>

#define Shadow                                  QFrame::Shadow
#define Shape                                   QFrame::Shape
#define StyleMask                               QFrame::StyleMask

/*
 * Wip: Class Creation & Object Instantiation Section INIT
 */

HB_FUNC( QFRAME );
HB_FUNC_EXTERN( __CLSLOCKDEF );
HB_FUNC_EXTERN( HBCLASS );
HB_FUNC_EXTERN( QWIDGET );
HB_FUNC_STATIC( S_REGISTERMETHODS );
HB_FUNC_EXTERN( __CLSUNLOCKDEF );
HB_FUNC_EXTERN( __OBJHASMSG );
HB_FUNC_INITSTATICS();
HB_FUNC_EXTERN( QSIZE ); // REQUEST'ed Class
HB_FUNC_EXTERN( QRECT ); // REQUEST'ed Class

HB_INIT_SYMBOLS_BEGIN( hb_vm_SymbolInit_QFRAME )
{ "QFRAME", {HB_FS_PUBLIC | HB_FS_FIRST | HB_FS_LOCAL}, {HB_FUNCNAME( QFRAME )}, NULL },
{ "__CLSLOCKDEF", {HB_FS_PUBLIC}, {HB_FUNCNAME( __CLSLOCKDEF )}, NULL },
{ "NEW", {HB_FS_PUBLIC | HB_FS_MESSAGE}, {NULL}, NULL },
{ "HBCLASS", {HB_FS_PUBLIC}, {HB_FUNCNAME( HBCLASS )}, NULL },
{ "QWIDGET", { HB_FS_PUBLIC }, { HB_FUNCNAME( QWIDGET ) }, NULL },
{ "CREATE", {HB_FS_PUBLIC | HB_FS_MESSAGE}, {NULL}, NULL },
{ "S_REGISTERMETHODS", {HB_FS_STATIC | HB_FS_LOCAL}, {HB_FUNCNAME( S_REGISTERMETHODS )}, NULL },
{ "HCLASS", {HB_FS_PUBLIC | HB_FS_MESSAGE}, {NULL}, NULL },
{ "__CLSUNLOCKDEF", {HB_FS_PUBLIC}, {HB_FUNCNAME( __CLSUNLOCKDEF )}, NULL },
{ "INSTANCE", {HB_FS_PUBLIC | HB_FS_MESSAGE}, {NULL}, NULL },
{ "__OBJHASMSG", {HB_FS_PUBLIC}, {HB_FUNCNAME( __OBJHASMSG )}, NULL },
{ "INITCLASS", {HB_FS_PUBLIC | HB_FS_MESSAGE}, {NULL}, NULL },
{ "(_INITSTATICS_1)", {HB_FS_INITEXIT | HB_FS_LOCAL}, {hb_INITSTATICS}, NULL },
{ "QSIZE", {HB_FS_PUBLIC}, {HB_FUNCNAME( QSIZE )}, NULL }, // REQUEST'ed Class
{ "QRECT", {HB_FS_PUBLIC}, {HB_FUNCNAME( QRECT )}, NULL }  // REQUEST'ed Class
HB_INIT_SYMBOLS_END( hb_vm_SymbolInit_QFRAME )

HB_FUNC( QFRAME )
{
    qthClassObjCreator( symbols, 1 );
}

HB_FUNC_INITSTATICS()
{
    qthInitStatics( symbols, 1 );
}
/*
 * Wip: Class Creation & Object Instantiation Section END
 */

/*
 * Wip: Method's Declaration Section INIT
 */
HB_FUNC_STATIC( NEW )
{
    /*
     * _public_functions_ : QFrame ( QWidget * parent = 0, Qt::WindowFlags f = 0 )
     */
    if( ( hb_pcount() <= 2 ) && qth_Is( 1, "QWidget", QTH_DEFAULT ) && qth_IsIntType( 2, "Qt::WindowFlags", QTH_DEFAULT ) )
    {
        QWidget* parent = hb_param( 1, HB_IT_OBJECT ) ? qth_parPtr<QWidget>( 1 ) : ( QWidget* ) 0;
        qth_itemPushReturn( QtH::QFrame, new QFrame( parent, (Qt::WindowFlags) qth_par_IntType( 2, 0 ) ) );
        return;
    }
    qth_errRT_PARAM();
}

HB_FUNC_STATIC( FRAMERECT )
{
    QFrame* p_frame = static_cast<QFrame *> ( qth_itemListGet_CPP( hb_stackSelfItem() ) );

    if( p_frame )
    {
        /*
         * _public_functions_ : QRect  frameRect () const
         */
        if( hb_pcount() == 0 )
        {
            qth_itemPushNewReturn( QtH::QRect, new QRect( p_frame->frameRect() ), "QRect" );
            return;
        }
    }
    qth_errRT_PARAM();
}

HB_FUNC_STATIC( FRAMESHADOW )
{
    QFrame* p_frame = static_cast<QFrame *> ( qth_itemListGet_CPP( hb_stackSelfItem() ) );

    if( p_frame )
    {
        /*
         * _public_functions_ : Shadow  frameShadow () const
         */
        if( hb_pcount() == 0 )
        {
            hb_retni( p_frame->frameShadow() );
            return;
        }
    }
    qth_errRT_PARAM();
}

HB_FUNC_STATIC( FRAMESHAPE )
{
    QFrame* p_frame = static_cast<QFrame *> ( qth_itemListGet_CPP( hb_stackSelfItem() ) );

    if( p_frame )
    {
        /*
         * _public_functions_ : Shape  frameShape () const
         */
        if( hb_pcount() == 0 )
        {
            hb_retni( p_frame->frameShape() );
            return;
        }
    }
    qth_errRT_PARAM();
}

HB_FUNC_STATIC( FRAMESTYLE )
{
    QFrame* p_frame = static_cast<QFrame *> ( qth_itemListGet_CPP( hb_stackSelfItem() ) );

    if( p_frame )
    {
        /*
         * _public_functions_ : int  frameStyle () const
         */
        if( hb_pcount() == 0 )
        {
            hb_retni( p_frame->frameStyle() );
            return;
        }
    }
    qth_errRT_PARAM();
}

HB_FUNC_STATIC( FRAMEWIDTH )
{
    QFrame* p_frame = static_cast<QFrame *> ( qth_itemListGet_CPP( hb_stackSelfItem() ) );

    if( p_frame )
    {
        /*
         * _public_functions_ : int  frameWidth () const
         */
        if( hb_pcount() == 0 )
        {
            hb_retni( p_frame->frameWidth() );
            return;
        }
    }
    qth_errRT_PARAM();
}

HB_FUNC_STATIC( LINEWIDTH )
{
    QFrame* p_frame = static_cast<QFrame *> ( qth_itemListGet_CPP( hb_stackSelfItem() ) );

    if( p_frame )
    {
        /*
         * _public_functions_ : int  lineWidth () const
         */
        if( hb_pcount() == 0 )
        {
            hb_retni( p_frame->lineWidth() );
            return;
        }
    }
    qth_errRT_PARAM();
}

HB_FUNC_STATIC( MIDLINEWIDTH )
{
    QFrame* p_frame = static_cast<QFrame *> ( qth_itemListGet_CPP( hb_stackSelfItem() ) );

    if( p_frame )
    {
        /*
         * _public_functions_ : int  midLineWidth () const
         */
        if( hb_pcount() == 0 )
        {
            hb_retni( p_frame->midLineWidth() );
            return;
        }
    }
    qth_errRT_PARAM();
}

HB_FUNC_STATIC( SETFRAMERECT )
{
    QFrame* p_frame = static_cast<QFrame *> ( qth_itemListGet_CPP( hb_stackSelfItem() ) );

    if( p_frame )
    {
        /*
         * _public_functions_ : void  setFrameRect ( const QRect & )
         */
        if( ( hb_pcount() == 1 ) && qth_IsObject( 1, "QRect" ) )
        {
            const QRect & p_QRect1 = * static_cast<QRect *>( qth_par_QthObject( 1 ) );
            p_frame->setFrameRect( p_QRect1 );
            hb_ret();
            return;
        }
    }
    qth_errRT_PARAM();
}

HB_FUNC_STATIC( SETFRAMESHADOW )
{
    QFrame* p_frame = static_cast<QFrame *> ( qth_itemListGet_CPP( hb_stackSelfItem() ) );

    if( p_frame )
    {
        /*
         * _public_functions_ : void  setFrameShadow ( Shadow )
         */
        if( ( hb_pcount() == 1 ) && qth_IsIntType( 1, "Shadow" ) )
        {
            p_frame->setFrameShadow( (Shadow)  qth_par_IntType( 1 ) );
            hb_ret();
            return;
        }
    }
    qth_errRT_PARAM();
}

HB_FUNC_STATIC( SETFRAMESHAPE )
{
    QFrame* p_frame = static_cast<QFrame *> ( qth_itemListGet_CPP( hb_stackSelfItem() ) );

    if( p_frame )
    {
        /*
         * _public_functions_ : void  setFrameShape ( Shape )
         */
        if( ( hb_pcount() == 1 ) && qth_IsIntType( 1, "Shape" ) )
        {
            p_frame->setFrameShape( (Shape)  qth_par_IntType( 1 ) );
            hb_ret();
            return;
        }
    }
    qth_errRT_PARAM();
}

HB_FUNC_STATIC( SETFRAMESTYLE )
{
    QFrame* p_frame = static_cast<QFrame *> ( qth_itemListGet_CPP( hb_stackSelfItem() ) );

    if( p_frame )
    {
        /*
         * _public_functions_ : void  setFrameStyle ( int style )
         */
        if( ( hb_pcount() == 1 ) && qth_Is( 1, HB_IT_INTEGER ) )
        {
            p_frame->setFrameStyle( hb_parni( 1 ) );
            hb_ret();
            return;
        }
    }
    qth_errRT_PARAM();
}

HB_FUNC_STATIC( SETLINEWIDTH )
{
    QFrame* p_frame = static_cast<QFrame *> ( qth_itemListGet_CPP( hb_stackSelfItem() ) );

    if( p_frame )
    {
        /*
         * _public_functions_ : void  setLineWidth ( int )
         */
        if( ( hb_pcount() == 1 ) && qth_Is( 1, HB_IT_INTEGER ) )
        {
            p_frame->setLineWidth( hb_parni( 1 ) );
            hb_ret();
            return;
        }
    }
    qth_errRT_PARAM();
}

HB_FUNC_STATIC( SETMIDLINEWIDTH )
{
    QFrame* p_frame = static_cast<QFrame *> ( qth_itemListGet_CPP( hb_stackSelfItem() ) );

    if( p_frame )
    {
        /*
         * _public_functions_ : void  setMidLineWidth ( int )
         */
        if( ( hb_pcount() == 1 ) && qth_Is( 1, HB_IT_INTEGER ) )
        {
            p_frame->setMidLineWidth( hb_parni( 1 ) );
            hb_ret();
            return;
        }
    }
    qth_errRT_PARAM();
}

HB_FUNC_STATIC( SIZEHINT )
{
    QFrame* p_frame = static_cast<QFrame *> ( qth_itemListGet_CPP( hb_stackSelfItem() ) );

    if( p_frame )
    {
        /*
         * _reimplemented_public_functions_ : virtual QSize  sizeHint () const
         */
        if( hb_pcount() == 0 )
        {
            qth_itemPushNewReturn( QtH::QSize, new QSize( p_frame->sizeHint() ), "QSize" );
            return;
        }
    }
    qth_errRT_PARAM();
}

/*
 * Wip: Method's Declaration Section END
 */

/*
 * Wip: Register Harbour Method's Section INIT
 */
HB_FUNC_STATIC( S_REGISTERMETHODS )
{
    HB_USHORT uiClass = hb_itemGetNI( hb_param( 1, HB_IT_NUMERIC ) );

    hb_clsAdd( uiClass, "NEW"            , HB_FUNCNAME( NEW             ) );
    hb_clsAdd( uiClass, "FRAMERECT"      , HB_FUNCNAME( FRAMERECT       ) );
    hb_clsAdd( uiClass, "FRAMESHADOW"    , HB_FUNCNAME( FRAMESHADOW     ) );
    hb_clsAdd( uiClass, "FRAMESHAPE"     , HB_FUNCNAME( FRAMESHAPE      ) );
    hb_clsAdd( uiClass, "FRAMESTYLE"     , HB_FUNCNAME( FRAMESTYLE      ) );
    hb_clsAdd( uiClass, "FRAMEWIDTH"     , HB_FUNCNAME( FRAMEWIDTH      ) );
    hb_clsAdd( uiClass, "LINEWIDTH"      , HB_FUNCNAME( LINEWIDTH       ) );
    hb_clsAdd( uiClass, "MIDLINEWIDTH"   , HB_FUNCNAME( MIDLINEWIDTH    ) );
    hb_clsAdd( uiClass, "SETFRAMERECT"   , HB_FUNCNAME( SETFRAMERECT    ) );
    hb_clsAdd( uiClass, "SETFRAMESHADOW" , HB_FUNCNAME( SETFRAMESHADOW  ) );
    hb_clsAdd( uiClass, "SETFRAMESHAPE"  , HB_FUNCNAME( SETFRAMESHAPE   ) );
    hb_clsAdd( uiClass, "SETFRAMESTYLE"  , HB_FUNCNAME( SETFRAMESTYLE   ) );
    hb_clsAdd( uiClass, "SETLINEWIDTH"   , HB_FUNCNAME( SETLINEWIDTH    ) );
    hb_clsAdd( uiClass, "SETMIDLINEWIDTH", HB_FUNCNAME( SETMIDLINEWIDTH ) );
    hb_clsAdd( uiClass, "SIZEHINT"       , HB_FUNCNAME( SIZEHINT        ) );
}
/*
 * Wip: Register Harbour Method's Section END
 */
